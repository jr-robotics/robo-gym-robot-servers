<?xml version="1.0" ?>
<launch>
    <arg name="real_robot" default="false" doc="true: Real Robot, false: Simulated Robot"/>
    <arg name="gui" default="false"/>
    <arg name="rviz_gui" default="true"/>
    <arg name="gazebo_gui" default="false"/>
    <arg name="world_name" default="empty.world"/>
    <arg name="max_velocity_scale_factor" default="1.0" doc="Scale factor multiplied by maximum joint velocity value"/>
    <arg name="server_port" default="50051"/>
    <arg name="action_cycle_rate" default="25" doc="Rate at which new commands are published to the robot controller"/>
    <arg name="reference_frame" default="base" doc="Reference frame with respect to which target and ee pose are given"/>
    <arg name="rs_mode"  default="only_robot" doc="Defines the working mode of the Robot Server, this influences the RS state content"/>
    <arg name="action_mode"  default="delta_pos" doc="Defines the action mode of the Robot Server, this influences the command sent to the robot"/>

    <!-- Scene Objects -->
    <arg name="objects_controller" default="false"  doc="Start objects controller node"/>
    <arg name="n_objects" default="0.0"  doc="Number of objects in the scene"/>
    <arg name="object_trajectory_file_name" default="no_file" doc="Object trajectory file name"/>
    <arg name="object_0_model_name" default="" doc="Gazebo model name of the target object"/>
    <arg name="object_0_frame" default="" doc="TF Frame name of target"/>
    <arg name="object_1_model_name" default="" doc="Gazebo model name of object 1"/>
    <arg name="object_1_frame" default="" doc="TF Frame name of object 1"/>

    <!-- RViz Configuration -->
    <arg name="rviz_config_path" default="$(find panda_robot_server)/rviz"/>
    <arg name="rviz_config_file" default="panda_sim_rl.rviz" doc="RViz configuration file"/>
    <arg name="rviz_config" value="$(arg rviz_config_path)/$(arg rviz_config_file)"/>

    <!-- Robot Base position -->
    <!-- NOTE: Assuming the UR5 positions ATM -->
    <arg name="x"       default="0.0"   doc="base_link coordinate with respect to the world frame"/>
    <arg name="y"       default="0.0"   doc="base_link coordinate with respect to the world frame"/>
    <arg name="z"       default="0.1"   doc="base_link coordinate with respect to the world frame"/>
    <arg name="roll"    default="0.0"   doc="base_link coordinate with respect to the world frame"/>
    <arg name="pitch"   default="0.0"   doc="base_link coordinate with respect to the world frame"/>
    <arg name="yaw"     default="0.0"   doc="base_link coordinate with respect to the world frame"/>

    <!-- Camera 1 activate and position -->
    <!-- <arg name="camera1_gazebo" default="False" doc="use camera1 gazebo simulated sensor"/>
    <arg name="camera1_link_x" default="0.0" doc="camera1_link coordinate with respect to the world frame"/>
    <arg name="camera1_link_y" default="0.0" doc="camera1_link coordinate with respect to the world frame"/>
    <arg name="camera1_link_z" default="0.1" doc="camera1_link coordinate with respect to the world frame"/>
    <arg name="camera1_link_roll" default="0.0" doc="camera1_link coordinate with respect to the world frame"/>
    <arg name="camera1_link_pitch" default="0.0" doc="camera1_link coordinate with respect to the world frame"/>
    <arg name="camera1_link_yaw" default="0.0" doc="camera1_link coordinate with respect to the world frame"/> -->
    
    <!-- Robot description and related parameter files -->
    <!-- <arg name="robot_description_file" default="$(dirname)/inc/load_panda_sim.launch" doc="Launch file which populates the 'robot_description' parameter."/> -->

    <!-- Controller configurations -->


    <!-- Start the 'driver' (ie: Gazebo in this case) -->
    <!--<include file="$(dirname)/inc/load_panda_sim.launch">
        <arg name="gui" value="$(eval arg('gui') and arg('gazebo_gui'))"/>
        <arg name="paused" value="false"/>
        <arg name="gazebo_world" value="$(arg world_name)"/>
    </include>-->

    <!-- Launch Command Handler -->
    <!-- <node name="joint_trajectory_command_handler" pkg="panda_robot_server" type="joint_trajectory_command_handler.py" respawn="False" output="screen">
        <param name="real_robot" value="false"/>
        <param name="action_cycle_rate" value="$(arg action_cycle_rate)"></param>
    </node> -->

    <!-- Launch RViz -->
    <!-- <node if="$(eval arg('gui') and arg('rviz_gui'))" name="$(anon rviz)" pkg="rviz" type="rviz" respawn="false" args="-d $(arg rviz_config)" output="screen">
    </node> -->

    <!-- Global Parameters -->
    <param name="real_robot" value="$(arg real_robot)"></param>
    <param name="reference_frame" value="$(arg reference_frame)"></param>

    <!-- Scene Objects Parameters -->
    <param name="objects_controller" value="$(arg objects_controller)"></param>
    <param name="n_objects" value="$(arg n_objects)"></param>
    <param name="object_trajectory_file_name" value="$(arg object_trajectory_file_name)"></param>
    <param name="object_0_model_name" value="$(arg object_0_model_name)"></param>
    <param name="object_0_frame" value="$(arg object_0_frame)"></param>
    <param name="object_1_model_name" value="$(arg object_1_model_name)"></param>
    <param name="object_1_frame" value="$(arg object_1_frame)"></param>

    <!--Launch gRPC server -->
    <node name="robot_server" pkg="panda_robot_server" type="robot_server.py" respawn="false" output="screen">
        <param name="server_port" value="$(arg server_port)"></param>
        <param name="real_robot" value="true"></param>
        <param name="max_velocity_scale_factor" value="$(arg max_velocity_scale_factor)"></param>
        <param name="action_cycle_rate" value="$(arg action_cycle_rate)"></param>
        <param name="reference_frame" value="$(arg reference_frame)"></param>
        <param name="rs_mode" value="$(arg rs_mode)"></param>
        <param name="action_mode" value="$(arg action_mode)"></param>
    </node>

    <!--Launch objects controller -->
    <node if="$(arg objects_controller)" name="objects_controller" pkg="simulation_objects" type="objects_controller.py" respawn="false" output="screen" ></node>


</launch>
